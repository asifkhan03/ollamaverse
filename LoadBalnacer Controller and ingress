To delete any pods/service from any namsepace we should write
kubectl delete deployment ollamaverse-frontend -n default
kubectl delete service ollamaverse-frontend -n default
not the Pods or service name.


{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::936379345511:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/B74468CB963EAD123C5025A03E42B838"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "oidc.eks.ap-south-1.amazonaws.com/id/B74468CB963EAD123C5025A03E42B838:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller",
          "oidc.eks.ap-south-1.amazonaws.com/id/B74468CB963EAD123C5025A03E42B838:aud": "sts.amazonaws.com"
        }
      }
    }
  ]
}


--------------------------------------------------------------------------------------------------------------------------------------------------

https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.7.2/docs/install/iam_policy.json
--------------------------------------------------------------------------------------------------------------------------------------------------


helm repo add eks https://aws.github.io/eks-charts
helm repo update
-------------------


============+++++++++++++++++++++=====================++++++++++++++++++++++++++++=
$ cat alb-values.yaml 
clusterName: aiops-cluster
region: ap-south-1
vpcId: vpc-0a8fe13ef9d0d60c3

serviceAccount:
  create: false
  name: aws-load-balancer-controller

ingressClass: alb

+++++++++++----------------+++++++++++++===================


helm upgrade aws-load-balancer-controller \
    eks/aws-load-balancer-controller \
    -n kube-system \
    -f alb-values.yaml



    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

helm uninstall aws-load-balancer-controller -n kube-system

helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  -n kube-system \
  --set clusterName=ollamaverse-cluster \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=ap-south-1 \
  --set vpcId=vpc-0a8fe13ef9d0d60c3   








aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 976193257685.dkr.ecr.ap-south-1.amazonaws.com



  
docker build -t ollamaverse-backend:1.17 .
docker tag ollamaverse-backend:1.2 976193257685.dkr.ecr.ap-south-1.amazonaws.com/ollamaverse-backend:1.17
docker push 976193257685.dkr.ecr.ap-south-1.amazonaws.com/ollamaverse-backend:1.17




docker build -t ollamaverse-py-backend:1.17 .
docker tag ollamaverse-py-backend:1.17 976193257685.dkr.ecr.ap-south-1.amazonaws.com/ollamaverse-py-backend:1.17
docker push 976193257685.dkr.ecr.ap-south-1.amazonaws.com/ollamaverse-py-backend:1.17
  

docker build -t ollamaverse-frontend:1.1 .
docker tag ollamaverse-frontend:1.1 976193257685.dkr.ecr.ap-south-1.amazonaws.com/ollamaverse-frontend:1.1
docker push 976193257685.dkr.ecr.ap-south-1.amazonaws.com/ollamaverse-frontend:1.1




====================++++++++++++++++++++++=====================++++++++++++++++++++

SETUP EKS DashBoard: 

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml


eks-admin-service-account.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: eks-admin
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eks-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: eks-admin
  namespace: kubernetes-dashboard



kubectl create token eks-admin -n kubernetes-dashboard





kubernetes-dashboard-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubernetes-dashboard-ingress
  namespace: kubernetes-dashboard
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-01c4e1f0030c41d14,subnet-0676b3c3d8a01d979,subnet-07be6dad2f533444a
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:976193257685:certificate/044c0d59-3c44-4893-8957-ef084947b4da
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/backend-protocol: 'HTTPS'
    alb.ingress.kubernetes.io/healthcheck-path: /dashboard/
    external-dns.alpha.kubernetes.io/hostname: eks.asifahmadkhan.com
spec:
  ingressClassName: alb
  rules:
    - host: eks.asifahmadkhan.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kubernetes-dashboard
                port:
                  number: 443
